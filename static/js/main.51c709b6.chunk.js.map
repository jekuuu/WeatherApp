{"version":3,"sources":["img/weather-app.png","components/header.jsx","components/form.jsx","components/weatherIcon.jsx","components/weather.jsx","containers/homeContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","Navbar","bg","variant","Brand","href","alt","src","weatherLogo","width","height","className","WeatherForm","_ref","getWeather","Container","Form","onSubmit","Row","Col","xs","lg","style","color","Control","type","placeholder","name","size","autoFocus","Button","WeatherIcon","e","moment","require","Weather","weatherData","error","isLoading","content","Fragment","Spinner","animation","role","map","data","key","dt","Card","backgroundColor","weatherIcon","weather","icon","Body","Text","textTransform","description","temp","main","Math","round","unix","format","Alert","homeContainer","state","_callee","city","api_call","response","bank","today","newData","regenerator_default","wrap","_context","prev","next","target","elements","value","preventDefault","_this","setState","fetch","concat","sent","json","cod","list","date","filter","day","ApiDate","indexOf","push","stop","header","components_form","this","Component","App","homeContainer_homeContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51c709b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weather-app.e5fb8c5a.png\";","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport weatherLogo from \"../img/weather-app.png\";\n\nconst Header = props => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          alt=\"\"\n          src={weatherLogo}\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />\n        {\"  Weather Genie\"}\n      </Navbar.Brand>\n    </Navbar>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\n\nconst WeatherForm = ({ getWeather }) => {\n  return (\n    <Container>\n      <Form onSubmit={getWeather}>\n        <Row className=\"justify-content-md-center mx-auto\">\n          <Col xs lg=\"1\" />\n          <Col xs lg=\"4\" className=\"mt-3\">\n            <h3 style={{ color: \"#0cf\" }}>Get Weather Update</h3>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center mx-auto mt-3\">\n          <Col xs lg=\"4\" />\n          <Col xs lg=\"4\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter City Name\"\n              name=\"city\"\n              size=\"sm\"\n              autoFocus={true}\n            />\n          </Col>\n          <Col xs lg=\"4\">\n            <Button variant=\"dark\" type=\"submit\" size=\"sm\">\n              Get Weather\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\nexport default WeatherForm;\n","import React from \"react\";\n\nconst WeatherIcon = ({ e }) => {\n  if (e === \"10n\" || e === \"10d\" || e === \"9n\" || e === \"9d\") {\n    return (\n      <div className=\"icon rainy\">\n        <div className=\"cloud\" />\n        <div className=\"rain\" />\n      </div>\n    );\n  } else if (\n    e === \"02d\" ||\n    e === \"02n\" ||\n    e === \"03d\" ||\n    e === \"03n\" ||\n    e === \"04d\" ||\n    e === \"04n\"\n  ) {\n    return (\n      <div className=\"icon cloudy\">\n        <div className=\"cloud\" />\n        <div className=\"cloud\" />\n      </div>\n    );\n  } else if (e === \"13n\" || e === \"13d\") {\n    return (\n      <div className=\"icon flurries\">\n        <div className=\"cloud\" />\n        <div className=\"snow\">\n          <div className=\"flake\" />\n          <div className=\"flake\" />\n        </div>\n      </div>\n    );\n  } else if (e === \"01n\" || e === \"01d\") {\n    return (\n      <div className=\"icon cloudy\">\n        <div className=\"cloud\" />\n        <div className=\"cloud\" />\n      </div>\n    );\n  } else if (e === \"11n\" || e === \"11d\") {\n    return (\n      <div className=\"icon thunder-storm\">\n        <div className=\"cloud\" />\n        <div className=\"lightning\">\n          <div className=\"bolt\" />\n          <div className=\"bolt\" />\n        </div>\n      </div>\n    );\n  } else if (e === \"50n\" || e === \"50d\") {\n    return \"mist\";\n  } else {\n    return (\n      <div className=\"icon sunny\">\n        <div className=\"sun\">\n          <div className=\"rays\" />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default WeatherIcon;\n","import React from \"react\";\nimport { Container, Row, Col, Card, Spinner, Alert } from \"react-bootstrap\";\nimport WeatherIcon from \"./weatherIcon\";\nvar moment = require(\"moment\");\n\nconst Weather = ({ weatherData, error, isLoading }) => {\n  const roundTemp = temp => {\n    return Math.round(temp * 10) / 10;\n  };\n  const content = isLoading ? (\n    <>\n      <Col lg={6} />\n      <Col className=\"d-flex justify-content-between\" lg={4}>\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </Col>\n    </>\n  ) : error !== \"404\" ? (\n    weatherData.map(data => (\n      <Col lg={2} key={data.dt} className=\"mx-2 py-3\">\n        <Card style={{ width: \"12.5rem\", backgroundColor: \"#212529\" }}>\n          <WeatherIcon e={data.weather[0].icon} />\n          <Card.Body>\n            <Card.Text style={{ color: \"#fff\", textTransform: \"capitalize\" }}>\n              {data.weather[0].description}\n            </Card.Text>\n            <Card.Text style={{ color: \"#fff\" }}>\n              {roundTemp(data.main.temp)}&#176;C\n            </Card.Text>\n            <Card.Text style={{ color: \"#fff\" }}>\n              {moment.unix(data.dt).format(\"dddd, MMM D\")}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    ))\n  ) : (\n    <>\n      <Col lg={6} />\n      <Col className=\"d-flex justify-content-between\" lg={6}>\n        <Alert variant=\"danger\">City Not found</Alert>\n      </Col>\n    </>\n  );\n\n  return (\n    <Container>\n      <Row className=\"mt-3 ml-1\">{content}</Row>\n    </Container>\n  );\n};\nexport default Weather;\n","import React, { Component } from \"react\";\nimport Header from \"../components/header\";\nimport WeatherForm from \"../components/form\";\nimport Weather from \"../components/weather\";\n\nvar moment = require(\"moment\");\n\nexport default class homeContainer extends Component {\n  state = {\n    error: \"\",\n    weatherData: [],\n    isLoading: false\n  };\n\n  //getWeather is a method we'll use to make the api call\n  getWeather = async e => {\n    const city = e.target.elements.city.value;\n\n    e.preventDefault();\n    this.setState({ isLoading: true });\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=b751f390d4e694d0bb82e1cd8180c2cf`\n    );\n    const response = await api_call.json();\n\n    if (response.cod === \"404\") {\n      this.setState({ error: response.cod, isLoading: false });\n    } else {\n      var weatherData = response.list;\n      var bank = [];\n      var today = moment().date();\n\n      var newData = weatherData.filter(day => {\n        var ApiDate = moment.unix(day.dt).date();\n\n        if (ApiDate === today && bank.indexOf(ApiDate) > 0) {\n          bank.push(ApiDate);\n          return true;\n        } else if (bank.indexOf(ApiDate) > -1) {\n          return false;\n        } else {\n          bank.push(ApiDate);\n          return true;\n        }\n      });\n\n      this.setState({\n        weatherData: newData,\n        isLoading: false,\n        error: \"\"\n      });\n      // console.log(this.state.weatherData);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Header />\n        <WeatherForm getWeather={this.getWeather} />\n        <Weather\n          weatherData={this.state.weatherData}\n          error={this.state.error}\n          isLoading={this.state.isLoading}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport HomeContainer from \"../src/containers/homeContainer\";\nimport \"./index.css\";\n\nfunction App() {\n  return <HomeContainer />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}